name: Attach Debug APK To Release

on:
  release:
    types:
      - published

jobs:
  attach-apks:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Build and attach APK to release
        shell: bash {0}
        run: |
          exit_on_error() {
              echo "$1"
              echo "Deleting '$RELEASE_VERSION_NAME' release and '$GITHUB_REF' tag"
              hub release delete "$RELEASE_VERSION_NAME"
              git push --delete origin "$GITHUB_REF"
              exit 1
          }

          echo "Setting vars"
          RELEASE_VERSION_NAME="${GITHUB_REF/refs\/tags\//}"
          if ! printf "%s" "${RELEASE_VERSION_NAME/v/}" | grep -qP '^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'; then
            exit_on_error "The versionName '${RELEASE_VERSION_NAME/v/}' is not a valid version as per semantic version '2.0.0' spec in the format 'major.minor.patch(-prerelease)(+buildmetadata)'. https://semver.org/spec/v2.0.0.html."
          fi

          APK_DIR_PATH="./app/build/outputs/apk/debug"
          APK_VERSION_TAG="$RELEASE_VERSION_NAME+github-debug"
          APK_BASENAME_PREFIX="termux-api_$APK_VERSION_TAG"

          echo "Building APK for '$RELEASE_VERSION_NAME' release"
          export TERMUX_API_APK_VERSION_TAG="$APK_VERSION_TAG" # Used by app/build.gradle
          if ! ./gradlew assembleDebug; then
            exit_on_error "Build failed for '$RELEASE_VERSION_NAME' release."
          fi

          echo "Validating APK"
          if ! test -f "$APK_DIR_PATH/${APK_BASENAME_PREFIX}.apk"; then
            files_found="$(ls "$APK_DIR_PATH")"
            exit_on_error "Failed to find built APK at '$APK_DIR_PATH/${APK_BASENAME_PREFIX}.apk'. Files found: "$'\n'"$files_found"
          fi

          echo "Generating sha256sums file"
          if ! (cd "$APK_DIR_PATH"; sha256sum "${APK_BASENAME_PREFIX}.apk" > sha256sums); then
            exit_on_error "Generate sha256sums failed for '$RELEASE_VERSION_NAME' release."
          fi

          echo "Attaching APK to github release"
          if ! hub release edit \
          -m "" \
          -a "$APK_DIR_PATH/${APK_BASENAME_PREFIX}.apk" \
          -a "$APK_DIR_PATH/sha256sums" \
          "$RELEASE_VERSION_NAME"; then
            exit_on_error "Attach APK to release failed for '$RELEASE_VERSION_NAME' release."
          fi
